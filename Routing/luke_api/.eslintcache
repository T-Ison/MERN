[{"/Users/thomas/Desktop/CodingDojo/MERN/Assignments/luke_api/src/index.js":"1","/Users/thomas/Desktop/CodingDojo/MERN/Assignments/luke_api/src/reportWebVitals.js":"2","/Users/thomas/Desktop/CodingDojo/MERN/Assignments/luke_api/src/App.js":"3","/Users/thomas/Desktop/CodingDojo/MERN/Assignments/luke_api/src/components/Starships.jsx":"4","/Users/thomas/Desktop/CodingDojo/MERN/Assignments/luke_api/src/components/Planets.jsx":"5","/Users/thomas/Desktop/CodingDojo/MERN/Assignments/luke_api/src/components/People.jsx":"6","/Users/thomas/Desktop/CodingDojo/MERN/Assignments/luke_api/src/components/Home.jsx":"7","/Users/thomas/Desktop/CodingDojo/MERN/Assignments/luke_api/src/components/ErrorPage.jsx":"8"},{"size":500,"mtime":1610673180994,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1610673180995,"results":"11","hashOfConfig":"10"},{"size":738,"mtime":1610741324530,"results":"12","hashOfConfig":"10"},{"size":1143,"mtime":1610741430752,"results":"13","hashOfConfig":"10"},{"size":1016,"mtime":1610741596517,"results":"14","hashOfConfig":"10"},{"size":1082,"mtime":1610741340071,"results":"15","hashOfConfig":"10"},{"size":976,"mtime":1610739361865,"results":"16","hashOfConfig":"10"},{"size":387,"mtime":1610741984662,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"2g9504",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"20"},"/Users/thomas/Desktop/CodingDojo/MERN/Assignments/luke_api/src/index.js",[],["40","41"],"/Users/thomas/Desktop/CodingDojo/MERN/Assignments/luke_api/src/reportWebVitals.js",[],"/Users/thomas/Desktop/CodingDojo/MERN/Assignments/luke_api/src/App.js",[],"/Users/thomas/Desktop/CodingDojo/MERN/Assignments/luke_api/src/components/Starships.jsx",["42"],"import React, {useState , useEffect} from 'react';\nimport axios from 'axios';\n\n\nfunction Starships (props) {\n    const [result, setResult] = useState({});\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        axios.get(`https://swapi.dev/api/starships/${props.id}/`)\n        .then(response => {setResult(response.data)})\n        .catch((event) => {setError(\"These aren't the droids you're looking for.\")})\n    }, [props])\n    \n        return (\n            <div>\n                <h2>{result.name}</h2>\n                <p>Model: {result.model}</p>\n                <p>Manufacturer: {result.manufacturer}</p>\n                <p>Cost in Credits: AurebeshSans-Serif credit.png{result.cost_in_credits}</p>\n                <p>length: {result.length}</p>\n                <p>max Atmosphering speed:{result.max_atmosphering_speed}</p>\n                <p>Crew: {result.crew}</p>\n                <p>Cargo Capacity: {result.cargo_capacity}</p>\n                <p>Hyperdrive Rating: {result.hyperdrive_rating}</p>\n                <p>Starship Class: {result.starship_class}</p>\n            </div>\n        );\n}\n\nexport default Starships;","/Users/thomas/Desktop/CodingDojo/MERN/Assignments/luke_api/src/components/Planets.jsx",["43"],"import React, {useState , useEffect} from 'react';\nimport axios from 'axios';\n\n\nfunction Planets (props) {\n    const [result, setResult] = useState({});\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        axios.get(`https://swapi.dev/api/planets/${props.id}/`)\n        .then(response => {setResult(response.data)})\n        .catch((event) => {setError(\"These aren't the droids you're looking for.\")})\n    }, [props])\n    \n        return (\n            <div>\n                <h2>{result.name}</h2>\n                <p>Rotation Period: {result.rotation_period}</p>\n                <p>Orbital Period: {result.orbital_period}</p>\n                <p>Diameter: {result.diameter}</p>\n                <p>Climate: {result.climate}</p>\n                <p>Gravity:{result.gravity}</p>\n                <p>Terrain: {result.terrain}</p>\n                <p>Surface Water: {result.surface_water}</p>\n                <p>Population: {result.population}</p>\n            </div>\n        )\n}\n\nexport default Planets;","/Users/thomas/Desktop/CodingDojo/MERN/Assignments/luke_api/src/components/People.jsx",["44","45"],"import React, {useState , useEffect} from 'react';\nimport axios from 'axios';\nimport {navigate, Link} from '@reach/router';\n\n\nfunction People (props) {\n    const [result, setResult] = useState({});\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        axios.get(`https://swapi.dev/api/people/${props.id}/`)\n        .then(response => {setResult(response.data)})\n        // console log response to find out what response is needed\n        .catch((event) => {navigate(`/error`)})\n    }, [props])\n\n        return (\n            <div>\n                <h2>{result.name}</h2>\n                <p>Height: {result.height}</p>\n                <p>Mass: {result.mass}</p>\n                <p>Hair Color: {result.hair_color}</p>\n                <p>Skin Color: {result.skin_color}</p>\n                <p>Eye Color:{result.eye_color}</p>\n                <p>Birth Year: {result.birth_year}</p>\n                <p>Home World: {result.homeworld} </p>\n                <Link to = \"{result.homeworld}\"> {result.homeworld}</Link>\n            </div>\n        )\n}\n\nexport default People;","/Users/thomas/Desktop/CodingDojo/MERN/Assignments/luke_api/src/components/Home.jsx",[],["46","47"],"/Users/thomas/Desktop/CodingDojo/MERN/Assignments/luke_api/src/components/ErrorPage.jsx",["48"],"import React from 'react';\n\nfunction ErrorPage ()  {\n    return(\n        <div>\n            {/* <h2>These are not the droids you're looking for.</h2> */}\n            {/* <img src = \"http://i0.kym-cdn.com/entries/icons/facebook/000/018/682/obi-wan.jpg\" /> */}\n            <img src = \"http://www4.pictures.zimbio.com/mp/pGSDhhMkN26x.gif\" />\n        </div>\n    )\n}\n\nexport default ErrorPage;",{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":7,"column":12,"nodeType":"55","messageId":"56","endLine":7,"endColumn":17},{"ruleId":"53","severity":1,"message":"54","line":7,"column":12,"nodeType":"55","messageId":"56","endLine":7,"endColumn":17},{"ruleId":"53","severity":1,"message":"54","line":8,"column":12,"nodeType":"55","messageId":"56","endLine":8,"endColumn":17},{"ruleId":"53","severity":1,"message":"57","line":8,"column":19,"nodeType":"55","messageId":"56","endLine":8,"endColumn":27},{"ruleId":"49","replacedBy":"58"},{"ruleId":"51","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":8,"column":13,"nodeType":"62","endLine":8,"endColumn":80},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'setError' is assigned a value but never used.",["63"],["64"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]